{"ast":null,"code":"import { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { map } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/data-handler.service\";\nimport * as i2 from \"../../services/room.service\";\nimport * as i3 from \"../../services/message.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"../../services/token-storage.service\";\nimport * as i6 from \"../../services/notification.service\";\nimport * as i7 from \"../../services/image-upload.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/cdk/text-field\";\nimport * as i12 from \"@angular/forms\";\nimport * as i13 from \"@angular/material/button\";\nimport * as i14 from \"@angular/material/icon\";\nimport * as i15 from \"@angular/material/list\";\nimport * as i16 from \"@angular/material/divider\";\nconst _c0 = [\"scrollMe\"];\n\nfunction MessageListComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function MessageListComponent_div_7_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.openDialogMembers();\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"groups\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MessageListComponent_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 26);\n    i0.ɵɵtext(1, \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MessageListComponent_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"span\", 27);\n    i0.ɵɵelement(2, \"img\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 29);\n    i0.ɵɵelementStart(4, \"div\", 1);\n    i0.ɵɵelementStart(5, \"span\", 3);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 30);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 31);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r6 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    i0.ɵɵclassMapInterpolate1(\"ks-item \", message_r6.sender_id === ctx_r3.currentUserId ? ctx_r3.selfMessage : ctx_r3.fromMessage, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r3.formatImage(ctx_r3.userImages == null ? null : ctx_r3.userImages.get(message_r6.sender_id)) || \"https://www.missingdogsuk.co.uk/wp-content/plugins/wp-job-manager-resumes/assets/images/candidate.png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r3.messageService.getUserFromUserIdInRoom(ctx_r3.activeRoom, message_r6.sender_id) ? (tmp_2_0 = ctx_r3.messageService.getUserFromUserIdInRoom(ctx_r3.activeRoom, message_r6.sender_id)) == null ? null : tmp_2_0.nickname : \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 7, message_r6.sendingDate, \"short\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(message_r6.text);\n  }\n}\n\nfunction DialogMembers_mat_list_item_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"face\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \"\\u0418\\u043C\\u044F:\\u00A0\");\n    i0.ɵɵelementStart(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 8);\n    i0.ɵɵelementStart(7, \"mat-icon\");\n    i0.ɵɵtext(8, \"clear\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(user_r1.nickname);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", true);\n  }\n}\n\nconst _c1 = \".mat-dialog-content[_ngcontent-%COMP%]{padding:10px}.mat-icon[_ngcontent-%COMP%]{margin-left:5px;margin-right:5px}span[_ngcontent-%COMP%]{margin-left:15px}.mat-divider[_ngcontent-%COMP%]{padding-top:10px;padding-bottom:5px;margin-left:20px;margin-right:20px}\";\nexport let MessageListComponent = /*@__PURE__*/(() => {\n  class MessageListComponent {\n    constructor(dataHandlerService, roomService, messageService, dialog, tokenStorageService, notificationService, imageService) {\n      this.dataHandlerService = dataHandlerService;\n      this.roomService = roomService;\n      this.messageService = messageService;\n      this.dialog = dialog;\n      this.tokenStorageService = tokenStorageService;\n      this.notificationService = notificationService;\n      this.imageService = imageService;\n      this.selfMessage = \"ks-self\";\n      this.fromMessage = \"ks-from\";\n      this.userImages = new Map();\n      this.disableScrollDown = false;\n    }\n\n    ngOnInit() {\n      this.userImages = this.imageService.userImages;\n      this.currentUserId = this.tokenStorageService.getUser().user_id;\n      console.log(\"TEMP userId=\" + this.currentUserId); //this.users = this.dataHandlerService.getUserList();\n      //this.messages = this.dataHandlerService.getMessages();\n\n      this.roomService.selectedRoom.subscribe(room => {\n        this.activeRoom = room;\n        this.users = room.users;\n        this.messageService.getAllMessages(this.activeRoom.id);\n        this.imageService.getUsersImagesFromRoom(room);\n      });\n      this.messageService.subjectMessages.subscribe(messages => {\n        this.messages = messages;\n        this.disableScrollDown = false;\n        this.scrollToBottom();\n      });\n      this.messageService.subjectMessage.subscribe(message => {\n        this.messageService.lastMessagesInRooms.set(message.room_id, message);\n\n        if (this.activeRoom && this.activeRoom.id === message.room_id) {\n          this.messages.push(message);\n          this.disableScrollDown = false;\n          this.scrollToBottom();\n          console.log(\"Новое сообщение из текущей комнаты \" + message.room_id);\n        } else {\n          console.log(\"Новое сообщение из комнаты \" + message.room_id);\n          this.notificationService.showSnackBar(\"Новое сообщение из комнаты \" + message.room_id);\n        }\n      });\n      this.scrollToBottom();\n    } //*ngIf=\"getSenderImage(message.sender_id) | async; let image\"\n\n\n    ngAfterViewChecked() {\n      this.scrollToBottom();\n    }\n\n    formatImage(img) {\n      if (img == null) {\n        return null;\n      }\n\n      return 'data:image/jpeg;base64,' + img;\n    }\n\n    onReceivedImage(data) {\n      return data.imageBytes;\n    }\n\n    getSenderImage(senderId) {\n      let getImage = this.imageService.getUserImage(senderId);\n      if (getImage instanceof Observable) return getImage.pipe(map(val => 'data:image/jpeg;base64,' + val.imageBytes));else return of('data:image/jpeg;base64,' + getImage);\n    }\n\n    onScroll() {\n      let element = this.myScrollContainer.nativeElement;\n      let atBottom = element.scrollHeight - element.scrollTop === element.clientHeight;\n      this.disableScrollDown = !(this.disableScrollDown && atBottom);\n    }\n\n    scrollToBottom() {\n      if (this.disableScrollDown) {\n        return;\n      }\n\n      try {\n        this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n      } catch (err) {}\n    }\n\n    openDialogMembers() {\n      const dialogRef = this.dialog.open(DialogMembers, {\n        //width: '250px',\n        // height: '50%',\n        data: {\n          room: this.activeRoom,\n          users: this.users\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n      });\n    }\n\n    sendMessage() {\n      if (this.newMessageText && this.newMessageText.length > 0) {\n        this.messageService.createMessage(this.activeRoom.id, this.newMessageText);\n        this.newMessageText = '';\n      } else {\n        console.log(\"Сообщение пустое!\");\n      }\n    }\n\n  }\n\n  MessageListComponent.ɵfac = function MessageListComponent_Factory(t) {\n    return new (t || MessageListComponent)(i0.ɵɵdirectiveInject(i1.DataHandlerService), i0.ɵɵdirectiveInject(i2.RoomService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.TokenStorageService), i0.ɵɵdirectiveInject(i6.NotificationService), i0.ɵɵdirectiveInject(i7.ImageUploadService));\n  };\n\n  MessageListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MessageListComponent,\n    selectors: [[\"app-message-list\"]],\n    viewQuery: function MessageListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myScrollContainer = _t.first);\n      }\n    },\n    decls: 30,\n    vars: 10,\n    consts: [[1, \"ks-messages\", \"ks-messenger__messages\"], [1, \"ks-header\"], [1, \"ks-description\"], [1, \"ks-name\"], [1, \"ks-amount\"], [\"class\", \"ks-controls\", 4, \"ngIf\"], [\"data-reduce-height\", \".ks-footer\", \"tabindex\", \"0\", 1, \"ks-body\", \"ks-scrollable\", \"jspScrollable\", 2, \"height\", \"480px\", \"overflow-y\", \"scroll\", \"overflow-x\", \"hidden\", \"padding\", \"0px\", \"width\", \"701px\", 3, \"scroll\"], [\"scrollMe\", \"\"], [1, \"jspContainer\", 2, \"width\", \"601px\"], [1, \"jspPane\", 2, \"padding\", \"0px\", \"top\", \"0px\", \"width\", \"691px\"], [1, \"ks-items\"], [\"class\", \"ks-separator\", 4, \"ngIf\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [1, \"jspVerticalBar\"], [1, \"jspCap\", \"jspCapTop\"], [1, \"jspTrack\", 2, \"height\", \"390px\"], [1, \"jspDrag\", 2, \"height\", \"206px\"], [1, \"jspDragTop\"], [1, \"jspDragBottom\"], [1, \"jspCap\", \"jspCapBottom\"], [1, \"ks-footer\"], [\"hintLabel\", \"\\u041A\\u0430\\u043A \\u0432\\u0430\\u0448\\u0438 \\u0434\\u0435\\u043B\\u0430?\", 1, \"form-control\"], [\"matInput\", \"\", 3, \"disabled\", \"cdkTextareaAutosize\", \"matTextareaAutosize\", \"ngModel\", \"ngModelChange\"], [1, \"ks-controls\"], [\"mat-raised-button\", \"\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"mat-icon-button\", \"\", 3, \"click\"], [1, \"ks-separator\"], [1, \"ks-avatar\", \"ks-offline\"], [\"height\", \"36\", \"alt\", \"user image\", \"width\", \"36\", 1, \"rounded-circle\", 3, \"src\"], [1, \"ks-body\"], [1, \"ks-datetime\"], [1, \"ks-message\"]],\n    template: function MessageListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, MessageListComponent_div_7_Template, 4, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6, 7);\n        i0.ɵɵlistener(\"scroll\", function MessageListComponent_Template_div_scroll_8_listener() {\n          return ctx.onScroll();\n        });\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelementStart(12, \"ul\", 10);\n        i0.ɵɵtemplate(13, MessageListComponent_li_13_Template, 2, 0, \"li\", 11);\n        i0.ɵɵtemplate(14, MessageListComponent_li_14_Template, 12, 10, \"li\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 13);\n        i0.ɵɵelement(16, \"div\", 14);\n        i0.ɵɵelementStart(17, \"div\", 15);\n        i0.ɵɵelementStart(18, \"div\", 16);\n        i0.ɵɵelement(19, \"div\", 17);\n        i0.ɵɵelement(20, \"div\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"div\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 20);\n        i0.ɵɵelementStart(23, \"mat-form-field\", 21);\n        i0.ɵɵelementStart(24, \"mat-label\");\n        i0.ɵɵtext(25, \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"textarea\", 22);\n        i0.ɵɵlistener(\"ngModelChange\", function MessageListComponent_Template_textarea_ngModelChange_26_listener($event) {\n          return ctx.newMessageText = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 23);\n        i0.ɵɵelementStart(28, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function MessageListComponent_Template_button_click_28_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ɵɵtext(29, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.activeRoom ? ctx.activeRoom.name : \"\\u0418\\u043C\\u044F \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.activeRoom ? ctx.activeRoom.users.length : \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\", \" \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activeRoom);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !ctx.activeRoom);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"disabled\", !ctx.activeRoom)(\"cdkTextareaAutosize\", true)(\"matTextareaAutosize\", false)(\"ngModel\", ctx.newMessageText);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.activeRoom);\n      }\n    },\n    directives: [i8.NgIf, i8.NgForOf, i9.MatFormField, i9.MatLabel, i10.MatInput, i11.CdkTextareaAutosize, i10.MatTextareaAutosize, i12.DefaultValueAccessor, i12.NgControlStatus, i12.NgModel, i13.MatButton, i14.MatIcon],\n    pipes: [i8.DatePipe],\n    styles: [_c1]\n  });\n  return MessageListComponent;\n})();\nexport let DialogMembers = /*@__PURE__*/(() => {\n  class DialogMembers {\n    constructor(dialogRef, data, roomService) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.roomService = roomService;\n    }\n\n    addUser() {\n      this.roomService.addUserToRoom(this.nickname, this.data.room.id);\n    }\n\n  }\n\n  DialogMembers.ɵfac = function DialogMembers_Factory(t) {\n    return new (t || DialogMembers)(i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.RoomService));\n  };\n\n  DialogMembers.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialogMembers,\n    selectors: [[\"dialog-members\"]],\n    decls: 20,\n    vars: 3,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"mat-typography\"], [4, \"ngFor\", \"ngForOf\"], [\"hintLabel\", \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", 1, \"add-user-button\", 3, \"click\"], [\"align\", \"end\"], [\"mat-button\", \"\", 1, \"close-button\", 3, \"mat-dialog-close\"], [\"mat-icon-button\", \"\", 2, \"position\", \"absolute\", \"right\", \"20px\", 3, \"disabled\"]],\n    template: function DialogMembers_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-content\", 1);\n        i0.ɵɵelementStart(3, \"mat-list\");\n        i0.ɵɵtext(4, \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438: \");\n        i0.ɵɵtemplate(5, DialogMembers_mat_list_item_5_Template, 9, 2, \"mat-list-item\", 2);\n        i0.ɵɵelement(6, \"mat-divider\");\n        i0.ɵɵelementStart(7, \"mat-list-item\");\n        i0.ɵɵelementStart(8, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(9, \"mat-label\");\n        i0.ɵɵtext(10, \"\\u041D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function DialogMembers_Template_input_ngModelChange_11_listener($event) {\n          return ctx.nickname = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"span\");\n        i0.ɵɵelementStart(13, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function DialogMembers_Template_button_click_13_listener() {\n          return ctx.addUser();\n        });\n        i0.ɵɵelementStart(14, \"mat-icon\");\n        i0.ɵɵtext(15, \"add_circle_outline\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(16, \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-dialog-actions\", 6);\n        i0.ɵɵelementStart(18, \"button\", 7);\n        i0.ɵɵtext(19, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B \", ctx.data.room.name, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data.users);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.nickname);\n      }\n    },\n    directives: [i4.MatDialogTitle, i4.MatDialogContent, i15.MatList, i8.NgForOf, i16.MatDivider, i15.MatListItem, i9.MatFormField, i9.MatLabel, i10.MatInput, i12.DefaultValueAccessor, i12.NgControlStatus, i12.NgModel, i13.MatButton, i14.MatIcon, i4.MatDialogActions, i4.MatDialogClose],\n    styles: [_c1]\n  });\n  return DialogMembers;\n})();","map":null,"metadata":{},"sourceType":"module"}