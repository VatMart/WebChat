{"ast":null,"code":"import { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/token-storage.service\";\nimport * as i2 from \"../../services/user.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"../../services/room.service\";\nimport * as i5 from \"../../services/message.service\";\nimport * as i6 from \"../../services/image-upload.service\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../message-list/message-list.component\";\nimport * as i10 from \"../user-info/user-info.component\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"@angular/material/form-field\";\nimport * as i13 from \"@angular/material/input\";\n\nfunction ChatComponent_li_12_img_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 18);\n    i0.ɵɵpipe(1, \"async\");\n  }\n\n  if (rf & 2) {\n    const lasts_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", i0.ɵɵpipeBind1(1, 1, ctx_r2.formatImage(ctx_r2.imageService.getUserImage(lasts_r3.sender_id))), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ChatComponent_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 12);\n    i0.ɵɵlistener(\"click\", function ChatComponent_li_12_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const room_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.selectRoom(room_r1);\n    });\n    i0.ɵɵelementStart(1, \"a\");\n    i0.ɵɵelementStart(2, \"span\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 14);\n    i0.ɵɵelementStart(5, \"div\", 15);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 16);\n    i0.ɵɵtemplate(8, ChatComponent_li_12_img_8_Template, 2, 3, \"img\", 17);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const room_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_4_0;\n    i0.ɵɵclassProp(\"ks-active\", room_r1 === ctx_r0.selectedRoom);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(room_r1.users.length);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", room_r1.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.lastMessagesInRooms.get(room_r1.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ((tmp_4_0 = ctx_r0.lastMessagesInRooms.get(room_r1.id)) == null ? null : tmp_4_0.text) || \"\\u041F\\u0443\\u0441\\u0442\\u043E\\u0439\", \" \");\n  }\n}\n\nconst _c0 = \".mat-stroked-button[_ngcontent-%COMP%] {\\r\\n  color: royalblue;\\r\\n  margin: auto;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2QiLCJmaWxlIjoiY2hhdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1zdHJva2VkLWJ1dHRvbiB7XHJcbiAgY29sb3I6IHJveWFsYmx1ZTtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuIl19 */\";\nexport class ChatComponent {\n  constructor(tokenService, userService, dialogAddRoom, roomService, messageService, imageService) {\n    this.tokenService = tokenService;\n    this.userService = userService;\n    this.dialogAddRoom = dialogAddRoom;\n    this.roomService = roomService;\n    this.messageService = messageService;\n    this.imageService = imageService;\n    this.lastMessagesInRooms = new Map();\n    this.userImages = new Map();\n  } //TODO change on real data\n\n\n  ngOnInit() {\n    this.lastMessagesInRooms = this.messageService.lastMessagesInRooms;\n    this.userImages = this.imageService.userImages;\n    this.getCurrentUser();\n    this.roomService.roomsSubject.subscribe(rooms => {\n      this.rooms = rooms;\n      this.messageService.subscribeToRoomsMessages(this.rooms);\n      this.messageService.getLastMessagesInRooms(rooms);\n    });\n    this.roomService.roomSubject.subscribe(room => {\n      let checkRoom = this.rooms.find(currentRoom => currentRoom.id === room.id);\n\n      if (!checkRoom) {\n        this.rooms.push(room);\n        this.messageService.subscribeToRoomMessage(room);\n        this.messageService.getLastMessageInRoom(room);\n      } else {\n        checkRoom = room;\n        console.log('Изменена комната= ' + checkRoom.name);\n      }\n    }); //);\n\n    this.roomService.selectedRoom.subscribe(room => this.selectedRoom = room);\n    this.roomService.subscribeToRooms();\n    this.requestAllUserRoomList();\n  }\n\n  getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(data => {\n      this.user = data;\n    });\n  }\n\n  requestAllUserRoomList() {\n    this.roomService.getRooms();\n  }\n\n  openDialog() {\n    this.dialogAddRoom.open(DialogAddRoom, {\n      data: this.user\n    });\n  }\n\n  selectRoom(room) {\n    this.roomService.selectedRoom.next(room);\n    console.log(\"room= \" + room.name + \" is selected\");\n  }\n\n  formatImage(img) {\n    if (img == null) {\n      return null;\n    }\n\n    return 'data:image/jpeg;base64,' + img;\n  }\n\n}\n\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.TokenStorageService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.RoomService), i0.ɵɵdirectiveInject(i5.MessageService), i0.ɵɵdirectiveInject(i6.ImageUploadService));\n};\n\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"app-chat\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"ks-page-content\"], [1, \"ks-page-content-body\"], [1, \"ks-messenger\"], [1, \"ks-discussions\"], [1, \"ks-search\"], [\"mat-stroked-button\", \"\", 3, \"click\"], [\"data-auto-height\", \"\", 1, \"ks-body\", \"ks-scrollable\", \"jspScrollable\", 2, \"overflow-y\", \"auto\", \"overflow-x\", \"hidden\"], [1, \"jspContainer\", 2, \"width\", \"339px\", \"height\", \"550px\"], [1, \"jspPane\", 2, \"padding\", \"0px\", \"top\", \"0px\", \"width\", \"329px\"], [1, \"ks-items\"], [\"style\", \"cursor: pointer\", \"class\", \"ks-item \", 3, \"ks-active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ks-item\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"ks-group-amount\"], [1, \"ks-body\"], [1, \"ks-name\"], [1, \"ks-message\"], [\"class\", \"rounded-circle\", \"height\", \"18\", \"alt\", \"user image\", \"width\", \"18\", \"alt\", \"avatar\", 3, \"src\", 4, \"ngIf\"], [\"height\", \"18\", \"alt\", \"user image\", \"width\", \"18\", \"alt\", \"avatar\", 1, \"rounded-circle\", 3, \"src\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5);\n      i0.ɵɵelementStart(6, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_6_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵtext(7, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u0443\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 7);\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵelementStart(10, \"div\", 9);\n      i0.ɵɵelementStart(11, \"ul\", 10);\n      i0.ɵɵtemplate(12, ChatComponent_li_12_Template, 10, 6, \"li\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"app-message-list\");\n      i0.ɵɵelement(14, \"app-user-info\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rooms);\n    }\n  },\n  directives: [i7.MatButton, i8.NgForOf, i9.MessageListComponent, i10.UserInfoComponent, i8.NgIf],\n  pipes: [i8.AsyncPipe],\n  styles: [_c0]\n});\nexport class DialogAddRoom {\n  constructor(user, roomService) {\n    this.user = user;\n    this.roomService = roomService;\n    this.nameRoomFormControl = new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]);\n  }\n\n  onCreateRoom() {\n    console.log(\"input room name value=\" + this.nameRoomFormControl.value);\n    this.roomService.createRoom(this.nameRoomFormControl.value);\n  }\n\n}\n\nDialogAddRoom.ɵfac = function DialogAddRoom_Factory(t) {\n  return new (t || DialogAddRoom)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i4.RoomService));\n};\n\nDialogAddRoom.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DialogAddRoom,\n  selectors: [[\"dialog-add-room\"]],\n  decls: 16,\n  vars: 3,\n  consts: [[\"mat-dialog-title\", \"\"], [1, \"example-form\"], [\"hintLabel\", \"\\u041E\\u0442 3 \\u0434\\u043E 40 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\"], [\"maxlength\", \"40\", \"minlength\", \"3\", \"type\", \"text\", \"matInput\", \"\", 3, \"formControl\", \"placeholder\"], [\"input\", \"\"], [\"align\", \"end\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", 3, \"click\"]],\n  template: function DialogAddRoom_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u0443\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵelementStart(3, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(4, \"mat-label\");\n      i0.ɵɵtext(5, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"label\");\n      i0.ɵɵelement(7, \"input\", 3, 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-hint\", 5);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 6);\n      i0.ɵɵelementStart(12, \"button\", 7);\n      i0.ɵɵtext(13, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function DialogAddRoom_Template_button_click_14_listener() {\n        return ctx.onCreateRoom();\n      });\n      i0.ɵɵtext(15, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(8);\n\n      i0.ɵɵadvance(7);\n      i0.ɵɵpropertyInterpolate1(\"placeholder\", \"\", ctx.user.nickname, \"-Room\");\n      i0.ɵɵproperty(\"formControl\", ctx.nameRoomFormControl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"\", (_r0.value == null ? null : _r0.value.length) || 0, \"/40\");\n    }\n  },\n  directives: [i3.MatDialogTitle, i11.ɵNgNoValidate, i11.NgControlStatusGroup, i11.NgForm, i12.MatFormField, i12.MatLabel, i13.MatInput, i11.DefaultValueAccessor, i11.MaxLengthValidator, i11.MinLengthValidator, i11.NgControlStatus, i11.FormControlDirective, i12.MatHint, i3.MatDialogActions, i7.MatButton, i3.MatDialogClose],\n  styles: [_c0]\n});","map":{"version":3,"sources":["D:\\Projects\\AngularProjects\\WebChat\\src\\app\\views\\chat\\chat.component.ts","D:\\Projects\\AngularProjects\\WebChat\\src\\app\\views\\chat\\chat.component.html","D:\\Projects\\AngularProjects\\WebChat\\src\\app\\views\\chat\\dialog-add-room.html"],"names":[],"mappings":"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","sourcesContent":["import {Component, Inject, Input, OnInit, Output} from '@angular/core';\nimport {User} from \"../../model/user\";\nimport {Room} from \"../../model/room\";\nimport {Message} from \"../../model/message\";\nimport {TokenStorageService} from \"../../services/token-storage.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {MAT_DIALOG_DATA, MatDialog} from \"@angular/material/dialog\";\nimport {RoomService} from \"../../services/room.service\";\nimport {DataHandlerService} from \"../../services/data-handler.service\";\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {EventEmitter} from \"events\";\nimport {MessageService} from \"../../services/message.service\";\nimport {ImageUploadService} from \"../../services/image-upload.service\";\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  users: User[] | undefined;\n  rooms!: Room[];\n  messages: Message[] | undefined;\n  selectedRoom!: Room;\n\n  user!: User;\n  lastMessagesInRooms: Map<number, Message> = new Map<number, Message>();\n  userImages: Map<number, File> = new Map<number, File>();\n\n  constructor(private tokenService: TokenStorageService,\n              private userService: UserService,\n              public dialogAddRoom: MatDialog,\n              protected roomService: RoomService,\n              private messageService: MessageService,\n              public imageService: ImageUploadService) {\n  }\n\n  //TODO change on real data\n  ngOnInit(): void {\n    this.lastMessagesInRooms = this.messageService.lastMessagesInRooms;\n    this.userImages = this.imageService.userImages;\n    this.getCurrentUser();\n    this.roomService.roomsSubject.subscribe(rooms => {\n      this.rooms = rooms;\n      this.messageService.subscribeToRoomsMessages(this.rooms);\n      this.messageService.getLastMessagesInRooms(rooms);\n    });\n    this.roomService.roomSubject.subscribe(room => {\n      let checkRoom = this.rooms.find((currentRoom) => (currentRoom.id === room.id));\n      if (!checkRoom) {\n        this.rooms.push(room);\n        this.messageService.subscribeToRoomMessage(room);\n        this.messageService.getLastMessageInRoom(room);\n      } else {\n        checkRoom = room;\n        console.log('Изменена комната= '+ checkRoom.name);\n      }\n    })\n      //);\n    this.roomService.selectedRoom.subscribe(room => this.selectedRoom = room);\n    this.roomService.subscribeToRooms();\n    this.requestAllUserRoomList();\n  }\n\n  private getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(data => {\n      this.user = data;\n    });\n  }\n\n\n  private requestAllUserRoomList() {\n    this.roomService.getRooms();\n  }\n\n  openDialog() {\n    this.dialogAddRoom.open(DialogAddRoom, {\n      data: this.user\n    });\n\n  }\n\n  selectRoom(room: Room) {\n    this.roomService.selectedRoom.next(room);\n    console.log(\"room= \"+room.name+\" is selected\");\n  }\n\n  formatImage(img: any): any {\n    if (img == null) {\n      return null;\n    }\n    return 'data:image/jpeg;base64,' + img;\n  }\n}\n\n@Component({\n  selector: 'dialog-add-room',\n  templateUrl: 'dialog-add-room.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class DialogAddRoom {\n  constructor(@Inject(MAT_DIALOG_DATA) public user: User,\n              protected roomService: RoomService,\n              ) {\n  }\n\n  nameRoomFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(40),\n  ]);\n\n  onCreateRoom() {\n    console.log(\"input room name value=\"+ this.nameRoomFormControl.value)\n    this.roomService.createRoom(this.nameRoomFormControl.value)\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"ks-page-content\">\n    <div class=\"ks-page-content-body\">\n      <div class=\"ks-messenger\">\n\n        <div class=\"ks-discussions\">\n          <div class=\"ks-search\">\n            <button mat-stroked-button (click)=\"openDialog()\">Добавить комнату</button>\n          </div>\n          <div class=\"ks-body ks-scrollable jspScrollable\" data-auto-height=\"\" style=\"overflow-y: auto; overflow-x: hidden;\">\n            <div class=\"jspContainer\" style=\"width: 339px; height: 550px;\">\n              <div class=\"jspPane\" style=\"padding: 0px; top: 0px; width: 329px;\">\n                <ul class=\"ks-items\">\n                  <li style =\"cursor: pointer\" *ngFor=\"let room of rooms\" class=\"ks-item \" (click)=\"selectRoom(room)\" [class.ks-active]=\"room === selectedRoom\">\n                    <a>\n                      <span class=\"ks-group-amount\">{{room.users.length}}</span>\n                      <div class=\"ks-body\">\n                        <div class=\"ks-name\">\n                          {{room.name}}\n                          <!--//TODO ВРЕМЯ ПОСЛЕДНЕГО СООБЩЕНИЯ      <span class=\"ks-datetime\">just now</span>-->\n                        </div>\n                        <div class=\"ks-message\">\n                          <img class=\"rounded-circle\" height=\"18\" *ngIf=\"lastMessagesInRooms.get(room.id) let lasts\"\n                               [src]=\"formatImage(imageService.getUserImage(lasts.sender_id)) |async\" alt=\"user image\"\n                               width=\"18\" alt=\"avatar\"> {{lastMessagesInRooms.get(room.id)?.text ||'Пустой'}}\n                        </div>\n                      </div>\n                    </a>\n                  </li>\n\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <app-message-list></app-message-list>\n\n        <app-user-info></app-user-info>\n      </div>\n    </div>\n  </div>\n</div>\n","<h2 mat-dialog-title>Добавить комнату</h2>\r\n<form class=\"example-form\">\r\n  <mat-form-field hintLabel=\"От 3 до 40 символов\">\r\n    <mat-label>Название комнаты</mat-label>\r\n    <label>\r\n      <input #input maxlength=\"40\" minlength=\"3\" type=\"text\" matInput [formControl]=\"nameRoomFormControl\"\r\n             placeholder=\"{{user.nickname}}-Room\">\r\n    </label>\r\n    <mat-hint align=\"end\">{{input.value?.length || 0}}/40</mat-hint>\r\n  </mat-form-field>\r\n</form>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Закрыть</button>\r\n  <button mat-button mat-dialog-close (click)=\"onCreateRoom()\" >Добавить</button>\r\n</div>\r\n\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}