{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/token-storage.service\";\nimport * as i2 from \"../../services/user.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"../../services/room.service\";\nimport * as i5 from \"../../services/data-handler.service\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\n\nfunction ChatListComponent_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 8);\n    i0.ɵɵelementStart(1, \"a\", 9);\n    i0.ɵɵelementStart(2, \"span\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 11);\n    i0.ɵɵelementStart(5, \"div\", 12);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 13);\n    i0.ɵɵelement(8, \"img\", 14);\n    i0.ɵɵtext(9, \" \\u0417\\u0434\\u0435\\u0441\\u044C \\u0434\\u043E\\u043B\\u0436\\u043D\\u044B \\u0431\\u044B\\u0442\\u044C \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0435 \");\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵtext(11, \" 25 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const room_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(room_r1.users.length);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", room_r1.name, \" \");\n  }\n}\n\nconst _c0 = \".mat-stroked-button[_ngcontent-%COMP%] {\\r\\n  color: royalblue;\\r\\n  margin: auto;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7QUFDZCIsImZpbGUiOiJjaGF0LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtc3Ryb2tlZC1idXR0b24ge1xyXG4gIGNvbG9yOiByb3lhbGJsdWU7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbiJdfQ== */\";\nexport class ChatListComponent {\n  constructor(tokenService, userService, dialogAddRoom, roomService, dataHandlerService) {\n    this.tokenService = tokenService;\n    this.userService = userService;\n    this.dialogAddRoom = dialogAddRoom;\n    this.roomService = roomService;\n    this.dataHandlerService = dataHandlerService;\n  } //TODO change on real data\n\n\n  ngOnInit() {\n    this.users = this.dataHandlerService.getUserList();\n    this.messages = this.dataHandlerService.getMessages();\n    console.log(this.users);\n    console.log(this.rooms);\n    console.log(this.messages);\n    this.getCurrentUser();\n    this.getAllUserRoomList();\n  }\n\n  getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(data => {\n      this.user = data;\n      this.roomService.subscribeToRooms(String(this.user.id)).subscribe(this.onRoomReceived);\n    });\n  }\n\n  onRoomReceived(message) {\n    var _a;\n\n    const rooms = JSON.parse(message.body);\n\n    if (rooms.length > 1) {\n      console.log(\"rooms length=\" + rooms.length);\n      this.rooms = new Subject(value => {\n        value.next(rooms);\n      });\n    } else (_a = this.rooms) === null || _a === void 0 ? void 0 : _a.subscribe(value => {\n      value.push(rooms[0]);\n    });\n\n    console.log(\"Комната получена \" + message.body);\n    this.rooms.subscribe(val => {\n      console.log(\"room[0] name = \" + val[0].name);\n    });\n  }\n\n  getAllUserRoomList() {\n    this.roomService.getRooms();\n  }\n\n  openDialog() {\n    this.dialogAddRoom.open(DialogAddRoom, {\n      data: this.user\n    });\n  }\n\n}\n\nChatListComponent.ɵfac = function ChatListComponent_Factory(t) {\n  return new (t || ChatListComponent)(i0.ɵɵdirectiveInject(i1.TokenStorageService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.RoomService), i0.ɵɵdirectiveInject(i5.DataHandlerService));\n};\n\nChatListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatListComponent,\n  selectors: [[\"app-chat-list\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[1, \"ks-discussions\"], [1, \"ks-search\"], [\"mat-stroked-button\", \"\", 3, \"click\"], [\"data-auto-height\", \"\", 1, \"ks-body\", \"ks-scrollable\", \"jspScrollable\"], [1, \"jspContainer\", 2, \"width\", \"339px\", \"height\", \"550px\"], [1, \"jspPane\", 2, \"padding\", \"0px\", \"top\", \"0px\", \"width\", \"329px\"], [1, \"ks-items\"], [\"class\", \"ks-item \", 4, \"ngFor\", \"ngForOf\"], [1, \"ks-item\"], [\"href\", \"#\"], [1, \"ks-group-amount\"], [1, \"ks-body\"], [1, \"ks-name\"], [1, \"ks-message\"], [\"height\", \"18\", \"src\", \"https://bootdey.com/img/Content/avatar/avatar1.png\", \"width\", \"18\", \"alt\", \"avatar\", 1, \"rounded-circle\"]],\n  template: function ChatListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ChatListComponent_Template_button_click_2_listener() {\n        return ctx.openDialog();\n      });\n      i0.ɵɵtext(3, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u0443\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵelementStart(7, \"ul\", 6);\n      i0.ɵɵtemplate(8, ChatListComponent_li_8_Template, 12, 2, \"li\", 7);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 1, ctx.rooms));\n    }\n  },\n  directives: [i6.MatButton, i7.NgForOf],\n  pipes: [i7.AsyncPipe],\n  styles: [_c0]\n});\nexport class DialogAddRoom {\n  constructor(user, roomService) {\n    this.user = user;\n    this.roomService = roomService;\n    this.nameRoomFormControl = new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(40)]);\n  }\n\n  onCreateRoom() {\n    console.log(\"input room name value=\" + this.nameRoomFormControl.value);\n    this.roomService.createRoom(this.nameRoomFormControl.value);\n  }\n\n}\n\nDialogAddRoom.ɵfac = function DialogAddRoom_Factory(t) {\n  return new (t || DialogAddRoom)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i4.RoomService));\n};\n\nDialogAddRoom.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DialogAddRoom,\n  selectors: [[\"dialog-add-room\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[\"mat-dialog-title\", \"\"], [1, \"example-form\"], [\"type\", \"text\", \"matInput\", \"\", 3, \"formControl\", \"placeholder\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-button\", \"\", 3, \"click\"]],\n  template: function DialogAddRoom_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u0443\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵelementStart(3, \"mat-form-field\");\n      i0.ɵɵelementStart(4, \"mat-label\");\n      i0.ɵɵtext(5, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"label\");\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-hint\");\n      i0.ɵɵtext(9, \"\\u041E\\u0442 3 \\u0434\\u043E 40 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 3);\n      i0.ɵɵelementStart(11, \"button\", 4);\n      i0.ɵɵtext(12, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function DialogAddRoom_Template_button_click_13_listener() {\n        return ctx.onCreateRoom();\n      });\n      i0.ɵɵtext(14, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵpropertyInterpolate1(\"placeholder\", \"\", ctx.user.nickname, \"-Room\");\n      i0.ɵɵproperty(\"formControl\", ctx.nameRoomFormControl);\n    }\n  },\n  directives: [i3.MatDialogTitle, i8.ɵNgNoValidate, i8.NgControlStatusGroup, i8.NgForm, i9.MatFormField, i9.MatLabel, i10.MatInput, i8.DefaultValueAccessor, i8.NgControlStatus, i8.FormControlDirective, i9.MatHint, i3.MatDialogActions, i6.MatButton, i3.MatDialogClose],\n  styles: [_c0]\n});","map":{"version":3,"sources":["D:\\Projects\\AngularProjects\\WebChat\\src\\app\\views\\chat-list\\chat-list.component.ts","D:\\Projects\\AngularProjects\\WebChat\\src\\app\\views\\chat-list\\chat-list.component.html","D:\\Projects\\AngularProjects\\WebChat\\src\\app\\views\\chat-list\\dialog-add-room.html"],"names":[],"mappings":"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","sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {DataHandlerService} from \"../../services/data-handler.service\";\nimport {User} from \"../../model/user\";\nimport {Room} from \"../../model/room\";\nimport {Message} from \"../../model/message\";\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {UserService} from \"../../services/user.service\";\nimport {TokenStorageService} from \"../../services/token-storage.service\";\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {RoomService} from \"../../services/room.service\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport * as Stomp from \"stompjs\";\nimport {Observable, Subject} from \"rxjs\";\n\n@Component({\n  selector: 'app-chat-list',\n  templateUrl: './chat-list.component.html',\n  styleUrls: ['./chat-list.component.css']\n})\nexport class ChatListComponent implements OnInit {\n\n  users: User[] | undefined;\n  rooms!: Subject<Room[]>;\n  messages: Message[] | undefined;\n\n  user!: User;\n\n  constructor(private tokenService: TokenStorageService,\n              private userService: UserService,\n              public dialogAddRoom: MatDialog,\n              protected roomService: RoomService,\n              private dataHandlerService: DataHandlerService) {\n  }\n\n  //TODO change on real data\n  ngOnInit(): void {\n    this.users = this.dataHandlerService.getUserList();\n    this.messages = this.dataHandlerService.getMessages();\n    console.log(this.users);\n    console.log(this.rooms);\n    console.log(this.messages);\n    this.getCurrentUser();\n    this.getAllUserRoomList();\n  }\n\n  private getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(data => {\n      this.user = data;\n      this.roomService.subscribeToRooms(String(this.user.id)).subscribe(this.onRoomReceived);\n\n    });\n  }\n\n  private onRoomReceived(message: Stomp.Message) {\n    const rooms : Room[] = <Room[]>JSON.parse(message.body);\n    if (rooms.length > 1) {\n      console.log(\"rooms length=\"+ rooms.length)\n      this.rooms = new Subject <Room[]>(value => {\n        value.next(rooms);\n      })\n    } else this.rooms?.subscribe(value => {\n      value.push(rooms[0]);\n    })\n    console.log(\"Комната получена \" + message.body);\n    this.rooms.subscribe((val) =>{\n      console.log(\"room[0] name = \" + val[0].name)\n    });\n  }\n\n  private getAllUserRoomList() {\n    this.roomService.getRooms();\n  }\n\n  openDialog() {\n    this.dialogAddRoom.open(DialogAddRoom, {\n      data: this.user\n    });\n\n  }\n}\n\n@Component({\n  selector: 'dialog-add-room',\n  templateUrl: 'dialog-add-room.html',\n  styleUrls: ['./chat-list.component.css']\n})\nexport class DialogAddRoom {\n  constructor(@Inject(MAT_DIALOG_DATA) public user: User,\n              protected roomService: RoomService,) {\n  }\n\n  nameRoomFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(40),\n  ]);\n\n  onCreateRoom() {\n    console.log(\"input room name value=\"+ this.nameRoomFormControl.value)\n    this.roomService.createRoom(this.nameRoomFormControl.value)\n  }\n}\n","<div class=\"ks-discussions\">\n  <div class=\"ks-search\">\n    <button mat-stroked-button (click)=\"openDialog()\">Добавить комнату</button>\n  </div>\n  <div class=\"ks-body ks-scrollable jspScrollable\" data-auto-height=\"\">\n    <div class=\"jspContainer\" style=\"width: 339px; height: 550px;\">\n      <div class=\"jspPane\" style=\"padding: 0px; top: 0px; width: 329px;\">\n        <ul class=\"ks-items\">\n          <li *ngFor=\"let room of rooms | async\" class=\"ks-item \">\n            <a href=\"#\">\n              <span class=\"ks-group-amount\">{{room.users.length}}</span>\n              <div class=\"ks-body\">\n                <div class=\"ks-name\">\n                  {{room.name}}\n                  <!--//TODO ВРЕМЯ ПОСЛЕДНЕГО СООБЩЕНИЯ      <span class=\"ks-datetime\">just now</span>-->\n                </div>\n                <div class=\"ks-message\">\n                  <img class=\"rounded-circle\" height=\"18\"\n                       src=\"https://bootdey.com/img/Content/avatar/avatar1.png\"\n                       width=\"18\" alt=\"avatar\"> Здесь должны быть последние <br> 25 символов сообщения\n                </div>\n              </div>\n            </a>\n          </li>\n\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","<h1 mat-dialog-title>Добавить комнату</h1>\r\n<form class=\"example-form\">\r\n  <mat-form-field>\r\n    <mat-label>Название комнаты</mat-label>\r\n    <label>\r\n      <input type=\"text\" matInput [formControl]=\"nameRoomFormControl\"\r\n             placeholder=\"{{user.nickname}}-Room\">\r\n    </label>\r\n    <mat-hint>От 3 до 40 символов</mat-hint>\r\n  </mat-form-field>\r\n</form>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Закрыть</button>\r\n  <button mat-button (click)=\"onCreateRoom()\" >Добавить</button>\r\n</div>\r\n\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}